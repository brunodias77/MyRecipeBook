<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EMAIL_ALREADY_REGISTERED" xml:space="preserve">
    <value>The name cannot be empty.</value>
    <comment/>
  </data>
  <data name="NAME_EMPTY" xml:space="preserve">
    <value>The name cannot be empty.</value>
    <comment/>
  </data>
  <data name="EMAIL_EMPTY" xml:space="preserve">
    <value>The e-mail cannot be empty.</value>
    <comment/>
  </data>
  <data name="EMAIL_INVALID" xml:space="preserve">
    <value>The e-mail address is invalid.</value>
    <comment/>
  </data>
  <data name="PASSWORD_GREATER_THAN_OR_EQUAL_TO" xml:space="preserve">
    <value>The password must be longer than 6 characters.</value>
    <comment/>
  </data>
  <data name="UNKNOWN_ERROR" xml:space="preserve">
    <value>Unknown error</value>
    <comment/>
  </data>
  <data name="EMAIL_OR_PASSWORD_INVALID" xml:space="preserve">
    <value>Invalid email or password.</value>
    <comment/>
  </data>
  <data name="USER_WITHOUT_PERMISSION_ACCESS_RESOURCE" xml:space="preserve">
    <value>User does not have permission to access this resource.</value>
    <comment/>
  </data>
  <data name="NO_TOKEN" xml:space="preserve">
    <value>Token not find</value>
    <comment/>
  </data>
  <data name="PASSWORD_EMPTY" xml:space="preserve">
    <value>The password cannot empty</value>
    <comment/>
  </data>
  <data name="PASSWORD_INVALID" xml:space="preserve">
    <value>Invalid password. The password field must contain at least 6 characters</value>
    <comment/>
  </data>
  <data name="RECIPE_TITLE_EMPTY" xml:space="preserve">
    <value>The title of the recipe must be entered.</value>
    <comment/>
  </data>
  <data name="COOKING_TIME_NOT_SUPPORTED" xml:space="preserve">
    <value>The preparation time is invalid.</value>
    <comment/>
  </data>
  <data name="DIFFICULTY_LEVEL_NOT_SUPPORT" xml:space="preserve">
    <value>Difficulty level not supported.</value>
    <comment/>
  </data>
  <data name="RECIPE_MINIMUM_ONE_INGREDIENT" xml:space="preserve">
    <value>The recipe must have at least one ingredient.</value>
    <comment/>
  </data>
  <data name="AT_LEAST_ONE_INSTRUCTION" xml:space="preserve">
    <value>The recipe must have at least one insttruct.</value>
    <comment/>
  </data>
  <data name="DISH_TYPE_NOT_SUPPORT" xml:space="preserve">
    <value>Dish tyoe not supported</value>
    <comment/>
  </data>
  <data name="INGREDIENT_EMPTY" xml:space="preserve">
    <value>Ingredient empty</value>
    <comment/>
  </data>
  <data name="NON_NEGATIVE_INSTRUCTION_STEP" xml:space="preserve">
    <value>Non negative instruction step</value>
    <comment/>
  </data>
  <data name="INSTRUCTION_EMPTY" xml:space="preserve">
    <value>Instruction empty</value>
    <comment/>
  </data>
  <data name="INSTRUCTION_EXCEEDS_LIMIT_CHARACTERS" xml:space="preserve">
    <value>Instruction exceeds limit characteres</value>
    <comment/>
  </data>
  <data name="TWO_OR_MORE_INSTRUCTIONS_SAME_ORDER" xml:space="preserve">
    <value>Two instructions with the same step number.</value>
    <comment/>
  </data>
  <data name="RECIPE_NOT_FOUND" xml:space="preserve">
    <value>Recipe not found</value>
    <comment/>
  </data>
  <data name="INVALID_NUMBER_INGREDIENTS" xml:space="preserve">
    <value>Invalid number of ingredients. The list must contain between 1 to 5 ingredients.</value>
    <comment/>
  </data>
  <data name="DUPLICATED_INGREDIENTS_IN_LIST" xml:space="preserve">
    <value>Ingedients duplicated</value>
    <comment/>
  </data>
  <data name="INGREDIENT_NOT_FOLLOWING_PATTERN" xml:space="preserve">
    <value>Ingredient not following pattern.</value>
    <comment/>
  </data>
  <data name="ONLY_IMAGES_ACCEPTED" xml:space="preserve">
    <value>Only images (PNG, JPG, JPEG) are accepted.</value>
    <comment/>
  </data>
  <data name="EXPIRED_SESSION" xml:space="preserve">
    <value>Your session has expired. Please log in again to continue.</value>
    <comment/>
  </data>
  <data name="INVALID_SESSION" xml:space="preserve">
    <value>We couldn't find a valid session. Please log in to access this feature.</value>
    <comment/>
  </data>
</root>